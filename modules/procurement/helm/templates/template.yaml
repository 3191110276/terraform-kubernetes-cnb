kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
      
---  
      
      
      
      
      
     
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc2
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
      
      
---    
      
      
      
      
      








    
    
    
    
---
    
    
    
    
    
    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.component8 }}
spec:
  selector:
    matchLabels:
      name: ai-services
  replicas: {{ .Values.component8_replicas }}
  template:
    metadata:
      labels:
        name: ai-services
    spec:
      serviceAccountName: appdynamics-cluster-agent
      containers:
        - name: {{ .Values.component8 }}
          image: sashaz/java-services:v5
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 900M
            requests:
              cpu: 100m
              memory: 600M
          ports:
          - containerPort: 8080
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: ai-services
spec:
  selector:
    name: ai-services
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  
  
  
  
---
  
  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.component6 }}
spec:
  selector:
    matchLabels:
      name: app-load
  replicas: {{ .Values.component6_replicas }}
  template:
    metadata:
      labels:
        name: app-load
    spec:
      containers:
        - name: {{ .Values.component6 }}
          resources:
            limits:
              cpu: 200m
              memory: 900M
            requests:
              cpu: 100m
              memory: 600M
          image: sashaz/app-load:v1
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      
      

---







---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.component5 }}
spec:
  selector:
    matchLabels:
      name: web-api
  replicas: {{ .Values.component5_replicas }}
  template:
    metadata:
      labels:
        name: web-api
        tier-name: web-api-tier
        application-name: OS-App
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 2000
      serviceAccountName: appdynamics-cluster-agent
      containers:
        - name: {{ .Values.component5 }}
          image: sashaz/java-services:v5
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 900M
            requests:
              cpu: 100m
              memory: 600M
          ports:
          - containerPort: 8080
      restartPolicy: Always
---
---
apiVersion: v1
kind: Service
metadata:
  name: web-api
spec:
  selector:
    name: web-api
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  

      
 
 
 
      
      
      
---






apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.component9 }}
spec:
  selector:
    matchLabels:
      name: player-action-services
  replicas: {{ .Values.component9_replicas }}
  template:
    metadata:
      labels:
        name: player-action-services
        tier-name: player-action-services-tier
        application-name: OS-App
    spec:
      serviceAccountName: appdynamics-cluster-agent
      containers:
        - name: {{ .Values.component9 }}
          image: sashaz/java-services:v5
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
          resources:
            requests:
              cpu: 100m
              memory: 600M
            limits:
              cpu: 200m
              memory: 900M
      restartPolicy: Always


---
apiVersion: v1
kind: Service
metadata:
  name: player-action-services
spec:
  selector:
    name: player-action-services
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  
 
  
  
  
  
 
